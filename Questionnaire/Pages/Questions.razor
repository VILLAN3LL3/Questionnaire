@page "/"

@using Questionnaire.Data
@inject QuestionInteractor Interactor
@inject NavigationManager UriHelper

<div class="container-fluid">
    <div class="card p-3 m-auto">
        @if (!_submitted)
        {

            <div class="row align-items-lg-center">
                <div class="col-12 col-lg-4">
                    <h1>Questionnaire</h1>
                    <small class="text-muted mb-4">Required questions are marked with an asterisk (*)</small>
                </div>
                <div class="col-12 col-lg-4">
                    <h4>
                        Completed
                    </h4>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @(_completedQuestionPercentage)%;" aria-valuenow="@(_completedQuestionPercentage)" aria-valuemin="0" aria-valuemax="100"> @(_completedQuestionPercentage)%</div>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <h4>Completed including optional questions</h4>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @(_completedQuestionPercentageIncludingOptional)%;" aria-valuenow="@(_completedQuestionPercentageIncludingOptional)" aria-valuemin="0" aria-valuemax="100"> @(_completedQuestionPercentageIncludingOptional)%</div>
                    </div>
                </div>
            </div>

            @if (_questions == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <div style="height: 70vh; overflow-y: scroll;">
                    @foreach (var question in _questions)
                    {
                        <QuestionForm Question="@question" OnStateChangeEvent="Rerender"></QuestionForm>
                    }
                </div>
                <button class="btn btn-primary mt-4" @onclick="Submit" type="submit" disabled="@_isQuestionnaireInvalid">Show my score...</button>
            }
        }
        else
        {
            <h1>Your score</h1>
            <div class="alert @GetAlertClass()" role="alert">
                @_correctQuestionCount out of @_questions?.Count questions answered correctly (@(_correctQuestionPercentage)%)
            </div>
            <div style="height: 70vh; overflow-y: scroll;">
                @foreach (var question in _questions)
                {
                    <QuestionEvaluation Question="@question"></QuestionEvaluation>
                }
            </div>
        }

    </div>
</div>
@if (_showDialog)
{
    <QuestionnaireSelectModal OnClose="@OnDialogClose"></QuestionnaireSelectModal>

}

@code {
    private IList<Question> _questions;
    private bool _submitted;
    private int _correctQuestionCount = 0;
    private int _correctQuestionPercentage = 0;
    private bool _showDialog = true;
    private int _completedQuestionPercentage = 0;
    private int _completedQuestionPercentageIncludingOptional = 0;
    private bool _isQuestionnaireInvalid = true;

    private string GetAlertClass()
    {
        return _correctQuestionPercentage switch
        {
            100 => "alert-success",
            0 => "alert-danger",
            _ => "alert-primary"
        };
    }

    private void Submit()
    {
        _submitted = true;
        _correctQuestionCount = Interactor.GetCorrectQuestionCount(_questions);
        _correctQuestionPercentage = Interactor.GetCorrectQuestionPercentage(_correctQuestionCount, _questions.Count);
    }

    private Task OnDialogClose(string selectedQuestionnaire)
    {
        _showDialog = false;
        _questions = Interactor.GetQuestions(selectedQuestionnaire);
        _isQuestionnaireInvalid = !Interactor.AreAllRequiredQuestionsAnswered(_questions);
        return Task.CompletedTask;
    }

    private void Rerender(bool hasChanged)
    {
        _completedQuestionPercentage = Interactor.GetCompletedQuestionPercentage(_questions, false);
        _completedQuestionPercentageIncludingOptional = Interactor.GetCompletedQuestionPercentage(_questions, true);
        _isQuestionnaireInvalid = !Interactor.AreAllRequiredQuestionsAnswered(_questions);
        this.StateHasChanged();
    }
}

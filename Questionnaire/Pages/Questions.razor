@page "/"

@using Questionnaire.Data
@inject QuestionService QuestionService
@inject NavigationManager UriHelper

<div class="container-fluid">
    <div class="card p-3 m-auto" style="max-width: 500px">
        @if (!_submitted)
        {
            <h1>Questionnaire</h1>

            @if (_questions == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <div style="height: 70vh; overflow-y: scroll;">
                    @foreach (var question in _questions)
                    {
                        <QuestionForm Question="@question"></QuestionForm>
                    }
                </div>
                <button class="btn btn-primary mt-4" @onclick="Submit">Show my score...</button>
            }
        }
        else
        {
            <h1>Your score</h1>
            <p>@_correctQuestionCount out of @_questions?.Count questions answered correctly @_correctPercentage</p>
            <div style="height: 70vh; overflow-y: scroll;">
                @foreach (var question in _questions)
                {
                    <QuestionEvaluation Question="@question"></QuestionEvaluation>
                }
            </div>
        }

    </div>
</div>

@code {
    private IList<Question> _questions;
    private bool _submitted;
    private int _correctQuestionCount => _questions?.SelectMany(q => q.AnswerOptions).Count(a => a.IsCorrectAnswer && a.IsSelected) ?? 0;
    private string _correctPercentage => _questions != null ? $"({( _correctQuestionCount * 100 / _questions.Count * 100 ) / 100}%)" : "";

    protected override async Task OnInitializedAsync()
    {
        _questions = await QuestionService.GetQuestionsAsync();
    }
}

@functions {
    private void Submit()
    {
        _submitted = true;
    }
}
